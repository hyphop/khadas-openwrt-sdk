#!/bin/sh

## hyphop ##

#= openwrt fast build packages by sdk

## HOW TO

## ./build -1|-2|-3|-3l

PR="$(dirname "$0")"
PN="$(basename "$0")"
PA="$(realpath "$PR")"
RN="$(realpath "$0")"

. $0.lib
. $0.conf

cd "$PR"

[ "$BUILD_DIR" ] || \
    BUILD_DIR=../build

[ -d "$BUILD_DIR" ] || \
    mkdir -p "$BUILD_DIR"

[ "$DOWNLOADS" ] || \
    DOWNLOADS="$BUILD_DIR"

[ "$DOWNLOADS" ] || \
    mkdir -p "$DOWNLOADS"

export DOWNLOADS=$DOWNLOADS 

case $PATH in
    */opt/bin:*);;
    *)PATH="$PA/../opt/bin:$PATH";;
esac

NO_BUILD=
NO_UPDATE_FEEDS=
for a in "$@"; do
    case $a in
	-n)
	NO_UPDATE_FEEDS=1
	;;
	--no-*)
	NO_BUILD="$NO_BUILD ${a#--no-}"
    esac
done

./download $SDK_LINK || FAIL

( cd $BUILD_DIR
[ -d $SDK_DIR ] || {
    echo "[i] extract $SDK_FILE">&2
    tar -xf "$SDK_FILE" || {
    rm $SDK_DIR
    FAIL tar broken $SDK_FILE
    }
}
)

( cd $BUILD_DIR/$SDK_DIR || FAIL

    echo "$FEEDS" > feeds.conf.new

[ -s feeds.conf ] || \
    cp feeds.conf.new feeds.conf

## need check ??!!!
diff feeds.conf.new feeds.conf

[ "$NO_UPDATE_FEEDS" ] || \
./scripts/feeds update || FAIL

)

[ "$NO_BUILD" ] && {
echo "[i] no build $NO_BUILD">&2
}

BUILD_PKGS=
for p in $(grep -v ^\# "$RN.packages"); do
    [ "${NO_BUILD%* $p*}" = "$NO_BUILD" ] && \
    BUILD_PKGS="$BUILD_PKGS $p"
done

echo $BUILD_PKGS

( cd $BUILD_DIR/$SDK_DIR

./scripts/feeds install $BUILD_PKGS || FAIL

echo "" > package/linux/Makefile

make defconfig || FAIL

$PA/config_merge -r .config $(grep -v ^\# "$RN.config.olverlay") || FAIL

make || FAIL

)

